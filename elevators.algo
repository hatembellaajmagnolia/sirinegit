
DEFINE Elevator_Button  
    INIT ID_Button  : idButton        //button number
    INIT ID_Elevator  : idelevator       //elevator 1 or 2
    INIT Status : Status            // desactivate or activate
    SEQUENCE setStatus with status      // change statuts
        SET Status To status 
    SEQUENCE getStatus with status      // get statuts
        RETURN Status 
END DEFINE

DEFINE ELEVATOR 
    INIT B[
        Instantiate Elevator_Button WITH 1,idelevator,desactivate   //instantiate of the first Button 
        Instantiate Elevator_Button WITH 2,idelevator,desactivate   //instantiate of second buuton
        Instantiate Elevator_Button WITH 3,idelevator,desactivate   //instantiate of third buuton
        Instantiate Elevator_Button WITH 4,idelevator,desactivate   //instantiate of four buuton
        Instantiate Elevator_Button WITH 5,idelevator,desactivate   //instantiate of five buuton
        Instantiate Elevator_Button WITH 6,idelevator,desactivate   //instantiate of six buuton
        Instantiate Elevator_Button WITH 7,idelevator,desactivate   //instantiate of seven buuton
        Instantiate Elevator_Button WITH 8,idelevator,desactivate   //instantiate of eight buton
        Instantiate Elevator_Button WITH 9,idelevator,desactivate   //instantiate of nine buuton
        Instantiate Elevator_Button WITH 10,idelevator,desactivate   //instantiate of ten buuton
    ] 
    INIT ID_direction : 'null'
    INIT DoorStatus :'closed'
    INIT DoorObstrcution : 'false'
    INIT requestList : []
    INIT OverWeigth :'false'
END DEFINE

DEFINE Outside_Button
    INIT  ID_direction: id_direction
    INIT CURRENT_Floor :callerposition
    INIT Status : Status
    INIT Btn[
        Instantiate Outside_Button WITH Down,10, desactivate
        Instantiate Outside_Button WITH down or up,9, desactivate                //instantiate button outside (up or down)
        Instantiate Outside_Button WITH down or up,8, desactivate
        Instantiate Outside_Button WITH down or up,7, desactivate
        Instantiate Outside_Button WITH down or up,6, desactivate
        Instantiate Outside_Button WITH down or up,5, desactivate
        Instantiate Outside_Button WITH down or up,4, desactivate
        Instantiate Outside_Button WITH down or up,3, desactivate
        Instantiate Outside_Button WITH down or up,2, desactivate
        Instantiate Outside_Button WITH down or up,1, desactivate
    ]
END DEFINE
call elevator
call find best elevator
call operate elevator
call move elevator

 
SEQUENCE CallElevator (id_direction,CURRENT_Floor)
    call setButtonS
 // The best option is the nearest and already moving elevator that has the same direction that the current direction
    // Verify if the request is on the elevators way, otherwise the elevator will just continue its way ignoring this call
    // If there is no elevators moving at the same direction as the current direction, the nearest idle elevator is selected

SEQUENCE findElevator USING CURRENT_Floor AND Direction AND ID_Elevator OF Shaft
        SET ActiveID_Elevator TO EMPTY
        SET IdleID_Elevator TO EMPTY

        FOR EACH elevator1 IN ID_Elevator
            IF (elevator1 IS NOT "IDLE" AND elevator1 status IS EQUAL TO currentDirection) THEN  //if the elevator is active and has the same direction
                IF (elevator1 status IS "UP" AND elevator1 floor IS < CURRENT_Floor OR elevator1 status IS "DOWN" AND elevator1 floor IS > CURRENT_Floor) THEN
                    ADD elevator1 TO ActiveID_Elevator
                ENDIF
            ELSE 
                ADD elevator1 TO IdleID_Elevator
            ENDIF
        ENDFOR

        IF (ActiveID_Elevator IS not EMPTY) THEN
            CALL findNearestElevator USING CURRENT_Floor AND ActiveID_Elevator
        ELSE 
            CALL findNearestElevator USING CURRENT_Floor AND IdleID_Elevator         

        RETURN bestElevator 
    ENDSEQUENCE
